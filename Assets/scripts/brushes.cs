using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class brushes : MonoBehaviour
{
    public Camera mainCamera;
    public Transform[] myTargets; // –¢–æ—á–∫–∏, –∫—É–¥–∞ –º–æ–∂–Ω–æ –Ω–∞–Ω–æ—Å–∏—Ç—å (–≥—É–±—ã, —â–µ–∫–∏, –≤–µ–∫–∏ –∏ —Ç.–¥.)
    public Transform defTransf, myhead; // defTransf ‚Äî –ø–æ–∑–∏—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –∫–∏—Å—Ç–∏, myhead ‚Äî –∫–æ–Ω—á–∏–∫ –∫–∏—Å—Ç–∏ –∏–ª–∏ –ø–æ–º–∞–¥—ã
    public yasan yasan; // –°–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –Ω—É–∂–Ω—ã–µ —Å–ø—Ä–∞–π—Ç—ã (–Ω–∞–∫—Ä–∞—Å–∏—Ç—å)
    public float paintDistance; // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ü–µ–ª—å—é –∏ –∫–∏—Å—Ç—å—é, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º —Å—á–∏—Ç–∞–µ—Ç—Å—è, —á—Ç–æ –º—ã –Ω–∞–∫—Ä–∞—Å–∏–ª–∏
    public Canvas canvas;
    bool isbrushing; // –§–ª–∞–≥: —Å–µ–π—á–∞—Å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–≤–∏–∂–µ–Ω–∏–µ –∫–∏—Å—Ç–∏ –∏–ª–∏ –Ω–µ—Ç

    void Update()
    {
        if (isbrushing)
        {
            Vector2 inputPos;

            // üíª –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à–∫–æ–π (–≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –∏–ª–∏ –Ω–∞ –ü–ö)
            if (Application.isEditor || Application.platform == RuntimePlatform.WindowsPlayer)
            {
                if (Input.GetMouseButton(0))
                {
                    inputPos = Input.mousePosition;
                }
                else
                {
                    // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–∂–∞—Ç–∞ ‚Äî –≤–µ—Ä–Ω—É—Ç—å –∫–∏—Å—Ç—å –≤ —Ü–µ–Ω—Ç—Ä —ç–∫—Ä–∞–Ω–∞
                    inputPos = new Vector2(Screen.width / 2, Screen.height / 2);
                }
            }
            // üì± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–∞—Å–∞–Ω–∏—è –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
            else if (Input.touchCount > 0)
            {
                inputPos = Input.GetTouch(0).position;
            }
            else return; // –ù–µ—Ç –≤–≤–æ–¥–∞ ‚Äî –≤—ã—Ö–æ–¥–∏–º –∏–∑ –º–µ—Ç–æ–¥–∞

            Vector2 localPos;
            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —ç–∫—Ä–∞–Ω–∞ –≤ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞–Ω–≤–∞—Å–∞
            RectTransformUtility.ScreenPointToLocalPointInRectangle(
                canvas.transform as RectTransform,
                inputPos,
                null, // –ö–∞–º–µ—Ä–∞ –Ω–µ –Ω—É–∂–Ω–∞ –≤ —Ä–µ–∂–∏–º–µ Screen Space - Overlay
                out localPos
            );

            // üîÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –±–ª–∏–∑–∫–æ –∫–∏—Å—Ç—å –∫ –∫–∞–∫–æ–º—É-–ª–∏–±–æ —ç–ª–µ–º–µ–Ω—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫ –≥—É–±–∞–º)
            for (int i = 0; i < myTargets.Length; i++)
            {
                float distance = Vector3.Distance(myhead.position, myTargets[i].position);

                if (distance < paintDistance)
                {
                    yasan.set(); // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–π –º–∞–∫–∏—è–∂ (–º–µ–Ω—è–µ–º —Å–ø—Ä–∞–π—Ç –∏ —Ç.–¥.)
                    isbrushing = false; // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–∏—Å–æ–≤–∞–Ω–∏—è
                    transform.localPosition = defTransf.localPosition; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∏—Å—Ç—å –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
                    return;
                }
            }

            // üñå –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∫–∏—Å—Ç—å (UI —ç–ª–µ–º–µ–Ω—Ç) –≤ –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
            transform.localPosition = localPos;
        }
    }

    // –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ü–≤–µ—Ç–∞ –∏–ª–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –∫–∏—Å—Ç–∏
    public void setBrush()
    {
        isbrushing = true;
    }
}
